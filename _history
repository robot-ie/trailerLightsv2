{"entries":[{"timestamp":1733847965216,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"Hg@2W;Pp1gH*M(DkF)lZ\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"H(;$++l,FEoVhT{x,GqL\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let strip = neopixel.create(DigitalPin.P0, 24, NeoPixelMode.RGB)\nlet pattern = new xmas.OneLightPattern(strip)\npattern.init()\nbasic.forever(function () {\n    pattern.onForever()\n})"],[1,"\n"]],"start1":0,"start2":0,"length1":180,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\""],[0,"\n   "]],"start1":137,"start2":137,"length1":68,"length2":8},{"diffs":[[0,".md\""],[-1,","],[0,"\n    "],[-1,"    \"oneLightPattern.ts\",\n        \"allLightsPattern.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":221,"start2":221,"length1":150,"length2":44}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"oneLightPattern.ts","value":"namespace xmas {\n    export class OneLightPattern {\n        private strip: neopixel.Strip;\n        constructor(strip: neopixel.Strip) {\n            this.strip = strip;\n        }\n        init() {\n            let isRed = true\n            for (let i = 0; i < 51; i++) {\n                const color = isRed ? NeoPixelColors.Red : NeoPixelColors.Green\n                this.strip.setPixelColor(i, neopixel.colors(color))\n                isRed = !isRed\n            }\n        }\n\n        onForever() {\n            this.strip.rotate(1)\n            this.strip.show()\n            basic.pause(100)\n        }\n\n    }\n}"},{"type":"added","filename":"allLightsPattern.ts","value":"namespace xmas {\n    export class AllLightsPattern {\n        private strip: neopixel.Strip;\n        constructor(strip: neopixel.Strip) {\n            this.strip = strip;\n        }\n        init() {\n            this.strip.showColor(neopixel.colors(NeoPixelColors.Black))\n        }\n\n        onForever() {\n            this.strip.showColor(neopixel.colors(NeoPixelColors.Red))            \n            basic.pause(1000)\n            this.strip.showColor(neopixel.colors(NeoPixelColors.Green))\n        }\n\n    }\n}"}]}],"snapshots":[{"timestamp":1733847965215,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"trailer2js\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1733848162885}